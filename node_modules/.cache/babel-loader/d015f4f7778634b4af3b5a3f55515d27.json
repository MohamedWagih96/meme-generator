{"ast":null,"code":"import _defineProperty from\"/media/rogue/Rogue/Work/Projects/React/meme-generator/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/media/rogue/Rogue/Work/Projects/React/meme-generator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/media/rogue/Rogue/Work/Projects/React/meme-generator/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/media/rogue/Rogue/Work/Projects/React/meme-generator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/media/rogue/Rogue/Work/Projects/React/meme-generator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/media/rogue/Rogue/Work/Projects/React/meme-generator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/media/rogue/Rogue/Work/Projects/React/meme-generator/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import domtoimage from'dom-to-image';import Form from\"./Form\";import Meme from\"./Meme\";import\"./MemeGenerator.css\";var MemeGenerator=/*#__PURE__*/function(_React$Component){_inherits(MemeGenerator,_React$Component);function MemeGenerator(){var _this;_classCallCheck(this,MemeGenerator);_this=_possibleConstructorReturn(this,_getPrototypeOf(MemeGenerator).call(this));_this.state={topText:\"\",bottomText:\"\",meme:{name:\"Joker and Mini Joker\",img:\"https://i.imgur.com/XTNyiVw.png\",width:1200,height:600},memez:[]};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));_this.handleLoad=_this.handleLoad.bind(_assertThisInitialized(_this));return _this;}_createClass(MemeGenerator,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch(\"https://api.imgflip.com/get_memes\").then(function(response){return response.json();}).then(function(data){_this2.setState({memez:data.data.memes});}).catch(function(error){console.log(\"Error while retrieving data from the server\");});}},{key:\"shuffle\",value:function shuffle(){this.toggleVisibility(\"visible\",\"hidden\");var randomIndex=Math.floor(Math.random()*this.state.memez.length);var randomMeme=this.state.memez[randomIndex];this.setState({meme:{name:randomMeme.name,img:randomMeme.url,width:randomMeme.width,height:randomMeme.height}});}},{key:\"save\",value:function save(){var _this3=this;domtoimage.toJpeg(document.getElementById(\"memeWrapper\"),{quality:1.0}).then(function(dataUrl){//Create a hyperlink\nvar link=document.createElement(\"a\");//File name\nlink.download=_this3.state.meme.name;//Destination\nlink.href=dataUrl;link.click();});}},{key:\"toggleVisibility\",value:function toggleVisibility(spinnerVisibility,memeVisibility){document.getElementById(\"spinner\").style.visibility=spinnerVisibility;document.getElementById(\"memeWrapper\").style.visibility=memeVisibility;}},{key:\"handleClick\",value:function handleClick(event){//To prevent page from automatic refreshing\nevent.preventDefault();var name=event.target.name;if(name===\"shuffleButton\")this.shuffle();else if(name===\"saveButton\")this.save();}},{key:\"handleChange\",value:function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;this.setState(_defineProperty({},name,value));}},{key:\"handleLoad\",value:function handleLoad(spinnerVisibility,memeVisibility){this.toggleVisibility(spinnerVisibility,memeVisibility);}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"memeGeneratorBody\"},React.createElement(Form,{topText:this.state.topText,bottomText:this.state.bottomText,handleChange:this.handleChange,handleClick:this.handleClick}),React.createElement(Meme,{data:this.state.meme,topText:this.state.topText,bottomText:this.state.bottomText,handleLoad:this.handleLoad}),React.createElement(\"div\",{id:\"spinner\"}));}}]);return MemeGenerator;}(React.Component);export default MemeGenerator;","map":{"version":3,"sources":["/media/rogue/Rogue/Work/Projects/React/meme-generator/src/components/MemeGenerator.js"],"names":["React","domtoimage","Form","Meme","MemeGenerator","state","topText","bottomText","meme","name","img","width","height","memez","handleChange","bind","handleClick","handleLoad","fetch","then","response","json","data","setState","memes","catch","error","console","log","toggleVisibility","randomIndex","Math","floor","random","length","randomMeme","url","toJpeg","document","getElementById","quality","dataUrl","link","createElement","download","href","click","spinnerVisibility","memeVisibility","style","visibility","event","preventDefault","target","shuffle","save","value","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport domtoimage from 'dom-to-image';\n\nimport Form from \"./Form\";\nimport Meme from \"./Meme\";\nimport \"./MemeGenerator.css\";\n\n\nclass MemeGenerator extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n            meme: {\n                name: \"Joker and Mini Joker\",\n                img: \"https://i.imgur.com/XTNyiVw.png\",\n                width: 1200,\n                height: 600\n            },\n            memez: []\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);  \n        this.handleLoad = this.handleLoad.bind(this); \n    }\n\n    componentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n                memez: data.data.memes\n            })\n        })\n        .catch(error => {\n            console.log(\"Error while retrieving data from the server\")\n        })\n    }\n\n    shuffle() {\n        this.toggleVisibility(\"visible\", \"hidden\");\n\n        let randomIndex = Math.floor(Math.random() * this.state.memez.length);\n        let randomMeme = this.state.memez[randomIndex];\n        this.setState({\n            meme: {\n                name: randomMeme.name,\n                img: randomMeme.url,\n                width: randomMeme.width,\n                height: randomMeme.height\n            }\n        });\n    }\n\n    save() {\n        domtoimage.toJpeg(document.getElementById(\"memeWrapper\"), {quality: 1.0})\n        .then(dataUrl => {\n            //Create a hyperlink\n            let link = document.createElement(\"a\");\n            //File name\n            link.download = this.state.meme.name;\n            //Destination\n            link.href = dataUrl;\n            link.click();\n        });\n    }\n\n    toggleVisibility(spinnerVisibility, memeVisibility) {\n        document.getElementById(\"spinner\").style.visibility = spinnerVisibility;\n        document.getElementById(\"memeWrapper\").style.visibility = memeVisibility;\n    }\n\n    handleClick(event) {\n        //To prevent page from automatic refreshing\n        event.preventDefault();\n        const {name} = event.target;\n\n        if(name === \"shuffleButton\") this.shuffle();\n        else if(name === \"saveButton\") this.save();\n    }\n\n    handleChange(event) {\n        const {name, value} = event.target;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleLoad(spinnerVisibility, memeVisibility) {\n        this.toggleVisibility(spinnerVisibility, memeVisibility);\n    }\n\n    render() {\n        return(\n            <div className = \"memeGeneratorBody\">\n                <Form\n                    topText = {this.state.topText}\n                    bottomText = {this.state.bottomText}\n                    handleChange = {this.handleChange}\n                    handleClick = {this.handleClick}\n                />\n                \n                <Meme \n                    data = {this.state.meme}\n                    topText = {this.state.topText}\n                    bottomText = {this.state.bottomText}\n                    handleLoad = {this.handleLoad}\n                />  \n\n                <div id = \"spinner\"></div>       \n            </div>\n        );\n    }\n}\n\n\nexport default MemeGenerator;"]},"metadata":{},"sourceType":"module"}