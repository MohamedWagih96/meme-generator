{"ast":null,"code":"var _jsxFileName = \"/media/rogue/Rogue/Work/Projects/React/meme-generator/src/components/Meme.js\";\nimport React from \"react\";\nimport \"./Meme.css\";\n\nfunction Meme(props) {\n  let viewPortWidth = window.innerWidth;\n  let memeWidth = props.data.width;\n  let scaleDown = {};\n\n  if (viewPortWidth < 500) {\n    scaleDown = {\n      width: \"90%\",\n      height: \"auto\"\n    };\n  } else {\n    if (memeWidth > 750) {\n      scaleDown = {\n        width: \"35%\",\n        height: \"auto\"\n      };\n    } else scaleDown = {\n      width: \"70%\",\n      height: \"auto\"\n    };\n  }\n\n  const normalSize = {\n    width: props.data.width,\n    height: props.data.height\n  };\n  return React.createElement(\"div\", {\n    id: \"memeWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: props.data.width > 300 ? scaleDown : normalSize,\n    alt: \"Dank Meme\",\n    src: props.data.img,\n    onLoad: () => props.handleLoad(\"hidden\", \"visible\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    className: \"memeTopText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.topText), React.createElement(\"h2\", {\n    className: \"memeBottomText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.bottomText));\n}\n\nexport default Meme;","map":{"version":3,"sources":["/media/rogue/Rogue/Work/Projects/React/meme-generator/src/components/Meme.js"],"names":["React","Meme","props","viewPortWidth","window","innerWidth","memeWidth","data","width","scaleDown","height","normalSize","img","handleLoad","topText","bottomText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,MAAIC,aAAa,GAAGC,MAAM,CAACC,UAA3B;AACA,MAAIC,SAAS,GAAGJ,KAAK,CAACK,IAAN,CAAWC,KAA3B;AACA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAGN,aAAa,GAAG,GAAnB,EAAwB;AACpBM,IAAAA,SAAS,GAAG;AAACD,MAAAA,KAAK,EAAE,KAAR;AAAeE,MAAAA,MAAM,EAAE;AAAvB,KAAZ;AACH,GAFD,MAGK;AACD,QAAGJ,SAAS,GAAG,GAAf,EAAoB;AAChBG,MAAAA,SAAS,GAAG;AAACD,QAAAA,KAAK,EAAE,KAAR;AAAeE,QAAAA,MAAM,EAAE;AAAvB,OAAZ;AACH,KAFD,MAIID,SAAS,GAAG;AAACD,MAAAA,KAAK,EAAE,KAAR;AAAeE,MAAAA,MAAM,EAAE;AAAvB,KAAZ;AACP;;AAED,QAAMC,UAAU,GAAG;AAACH,IAAAA,KAAK,EAAEN,KAAK,CAACK,IAAN,CAAWC,KAAnB;AAA0BE,IAAAA,MAAM,EAAER,KAAK,CAACK,IAAN,CAAWG;AAA7C,GAAnB;AAEA,SACI;AAAK,IAAA,EAAE,EAAG,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAIR,KAAK,CAACK,IAAN,CAAWC,KAAX,GAAmB,GAAnB,GAAyBC,SAAzB,GAAqCE,UADlD;AAEI,IAAA,GAAG,EAAG,WAFV;AAGI,IAAA,GAAG,EAAIT,KAAK,CAACK,IAAN,CAAWK,GAHtB;AAII,IAAA,MAAM,EAAI,MAAMV,KAAK,CAACW,UAAN,CAAiB,QAAjB,EAA2B,SAA3B,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI;AAAI,IAAA,SAAS,EAAG,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BX,KAAK,CAACY,OAArC,CARJ,EAUI;AAAI,IAAA,SAAS,EAAG,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCZ,KAAK,CAACa,UAAxC,CAVJ,CADJ;AAcH;;AAED,eAAed,IAAf","sourcesContent":["import React from \"react\";\nimport \"./Meme.css\"\n\nfunction Meme(props) {\n    let viewPortWidth = window.innerWidth;\n    let memeWidth = props.data.width;\n    let scaleDown = {};\n\n    if(viewPortWidth < 500) {\n        scaleDown = {width: \"90%\", height: \"auto\"};\n    }\n    else {\n        if(memeWidth > 750) {\n            scaleDown = {width: \"35%\", height: \"auto\"};\n        }\n        else\n            scaleDown = {width: \"70%\", height: \"auto\"};\n    }\n    \n    const normalSize = {width: props.data.width, height: props.data.height};\n\n    return(\n        <div id = \"memeWrapper\">\n            <img\n                style = {props.data.width > 300 ? scaleDown : normalSize}\n                alt = \"Dank Meme\"\n                src = {props.data.img}\n                onLoad = {() => props.handleLoad(\"hidden\", \"visible\")}\n            />\n\n            <h2 className = \"memeTopText\">{props.topText}</h2>\n\n            <h2 className = \"memeBottomText\">{props.bottomText}</h2>\n        </div>\n    );\n}\n\nexport default Meme;"]},"metadata":{},"sourceType":"module"}